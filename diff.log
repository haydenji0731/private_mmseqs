85,86c85,88
<     par.parseParameters(argc, argv, command, true, 0, 0);
< 
---
>     // default for expand2profile to filter MSA
>     par.filterMsa = 1;
>     par.parseParameters(argc, argv, command, true,
>                         0, 0);
167c169,170
<             calculator = new PSSMCalculator(&subMat, par.maxSeqLen, 300, par.pcmode, par.pca, par.pcb);
---
>             // TODO: is this right?
>             calculator = new PSSMCalculator(&subMat, par.maxSeqLen, 300, par.pcmode, par.pca, par.pcb, par.gapOpen.values.aminoacid(), par.gapPseudoCount);
169a173
>             // changed
177c181
<         char buffer[1024 + 32000];
---
>         char buffer[1024 + 32768*4];
228,229c232,233
<                 // commented out to prevent sorting; this effects the sensitivity
< //                std::stable_sort(resultsBc.begin(), resultsBc.end(), compareHitsByKeyScore);
---
> 
>                 //std::stablesort(resultsBc.begin(), resultsBc.end(), compareHitsByKeyScore);
258,269c262,264
<                         if (returnAlnRes) {
< 	                       if (resultAc.score < INT_MIN) { // alignment too bad (fitted on regression benchmark EXPAND)
<                             continue;
<                         	}
< 			} else {
< 	                        if (resultAc.score < -6) { // alignment too bad (fitted on regression benchmark EXPAND)
<                             continue;
<                         	}
< 			}
< //			if (resultAc.score < INT_MIN) { // alignment too bad (fitted on regression benchmark EXPAND)
<   //                          continue;
<     //                    }
---
>                         if(resultAc.score < -6){ // alignment too bad (fitted on regression benchmark EXPAND)
>                            continue;
>                         }
272c267,272
<                             resultAc.eval = evaluer->computeEvalue(resultAc.score, aSeq.L);
---
> //		 rescoreResultByBacktrace(resultAc, aSeq, cSeq, subMat, compositionBias, par.gapOpen.values.aminoacid(), par.gapExtend.values.aminoacid());
>                             // alignment too bad (fitted on regression benchmark EXPAND)
> //                            if (resultAc.score < -6) {
> //                                continue;
> //                            } 
> 			   resultAc.eval = evaluer->computeEvalue(resultAc.score, aSeq.L);
312,313c312
<                 // commented out to prevent sorting; this effets sensitivity score
< //                SORT_SERIAL(resultsAc.begin(), resultsAc.end(), Matcher::compareHits);
---
>                 //SORT_SERIAL(resultsAc.begin(), resultsAc.end(), Matcher::compareHits);
